name: Run database tests

on:
  workflow_dispatch:
  push:
  pull_request:
    branches:
      - master

# Main reference: https://ovirium.com/blog/how-to-make-mysql-work-in-your-github-actions/

jobs:
  test-host:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      DB_DATABASE: testdb
      DB_USER: root
      DB_PASSWORD: root  # apparently I could not change this password
      # if process.env.GITHUB_ACTIONS is 'true', the password at db.config.js will change to 'root'
      # SQL_HOST: ${{ secrets.SQL_HOST }}
      SQL_HOST: ${{ secrets.SQL_HOST }}
      SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
      SQL_USER: ${{ secrets.SQL_USER }}
      SQL_DB: ${{ secrets.SQL_DB }}
      AUTH0_DOMAIN : ${{ secrets.AUTH0_DOMAIN }}
      AUTH0_AUDIENCE : ${{ secrets.AUTH0_AUDIENCE }}
      AUTH0_FRONTEND_CLIENTID: ${{ secrets.AUTH0_FRONTEND_CLIENTID }}
      AUTH0_ADMIN_USERNAME: ${{ secrets.AUTH0_ADMIN_USERNAME }}
      AUTH0_ADMIN_PWD: ${{ secrets.AUTH0_ADMIN_PWD }}
      AUTH0_MGT_TOKEN_TESTING: ${{ secrets.AUTH0_MGT_TOKEN_TESTING }}
      AUTH0_BACKEND_CLIENTID: ${{ secrets.AUTH0_BACKEND_CLIENTID }}
      AUTH0_CLIENT_SECRET_PDTN: ${{ secrets.AUTH0_CLIENT_SECRET_PDTN }}
      CLOUDSTORAGE_SECRET_PASSPHRASE: ${{ secrets.CLOUDSTORAGE_SECRET_PASSPHRASE }}
      ZILLIQA_PRIVATE_KEY: ${{ secrets.ZILLIQA_PRIVATE_KEY }}
      SC2_STARTUP_PRIVATE_KEY: ${{ secrets.SC2_STARTUP_PRIVATE_KEY }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up MySQL
      run: |
        echo $GITHUB_ACTIONS
        sudo /etc/init.d/mysql start
        mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn install
    - run: yarn test sample
    - run: yarn test campaign
      if: always()
    - run: yarn test auth
      if: always()
    - run: yarn test startup
      if: always()
    # - run: yarn test retailInvestors
    #   if: always()
    # - run: yarn test junctionTable
    #   if: always()
    # - run: yarn test recommender
    #   if: always()
    - run: yarn test
      if: always()